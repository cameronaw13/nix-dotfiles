name: "Nix CI"

on:
  pull_request:
  workflow_run:
    workflows: [Nix-Flake Updates]
    types: [completed]

env:
  REPO_NAME: ${{ github.actions_repository }}

jobs:
  nix-lints:
    runs-on: ubuntu-latest
    steps:
      - if: ${{ github.event_name == 'workflow_run' }}
        id: latest-pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.actions_repository }}
        run: |
          output="$(gh pr list -R "$REPO_NAME" --json headRefName -q .[0].headRefName)"
          echo "HEAD-REF=$output" >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@v4.1.7
        with:
          ref: ${{ github.event.pull_request.base.ref || steps.latest-pr.outputs.HEAD-REF }}

      - uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: DeterminateSystems/magic-nix-cache-action@v7

      - name: "Statix Lint"
        run: nix run nixpkgs#statix -- check .
      - name: "Deadnix Lint"
        run: nix run nixpkgs#deadnix -- --fail .

  nix-checks:
    runs-on: ubuntu-latest
    steps:
      - if: ${{ github.event_name == 'workflow_run' }}
        id: latest-pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          output="$(gh pr list -R "$REPO" --json headRefName -q .[0].headRefName)"
          echo "HEAD-REF=$output" >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@v4.1.7
        with:
          ref: ${{ github.event.pull_request.base.ref || steps.latest-pr.outputs.HEAD-REF }}
    
      - uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: DeterminateSystems/magic-nix-cache-action@v7

      - name: "SSH private repo auth"
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh-agent -a $SSH_AUTH_SOCK >/dev/null
          ssh-add - <<< "${{ secrets.SSH_KEY_NIX_SECRETS }}"

      - name: "Flake check"
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: nix flake check --keep-going
      - name: "Omnix check"
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: nix run --accept-flake-config github:juspay/omnix -- ci
