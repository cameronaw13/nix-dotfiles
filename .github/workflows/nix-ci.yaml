name: "Nix CI"

on:
  pull_request:
  workflow_run:
    workflows: [Nix-Flake Updates]
    types: [completed]

jobs:
  nix-lints:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion != 'failure' }}
    steps:
      - id: find-ref
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            output="${{ github.event.pull_request.head.ref }}"
          else
            output="flake-update"
          fi
          echo "HEAD_REF=$output" << "$GITHUB_OUTPUT"
      
      - uses: actions/checkout@v4.1.7
        with:
          ref: ${{ steps.find-ref.outputs.HEAD_REF }}
      
      - uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: DeterminateSystems/magic-nix-cache-action@v7

      - name: "Statix Lint"
        run: nix run nixpkgs#statix -- check .
      - name: "Deadnix Lint"
        run: nix run nixpkgs#deadnix -- --fail .

  nix-checks:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion != 'failure' }}
    steps:
      - id: find-ref
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            output="${{ github.event.pull_request.head.ref }}"
          else
            output="flake-update"
          fi
          echo "HEAD_REF=$output" >> "$GITHUB_OUTPUT"
      
      - uses: actions/checkout@v4.1.7
        with:
          ref: ${{ steps.find-ref.outputs.HEAD_REF }}
      
      - uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: DeterminateSystems/magic-nix-cache-action@v7

      - name: "SSH private repo auth"
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh-agent -a $SSH_AUTH_SOCK >/dev/null
          ssh-add - <<< "${{ secrets.SSH_KEY_NIX_SECRETS }}"

      - name: "Flake check"
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: nix flake check --keep-going
      - name: "Omnix check"
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: nix run --accept-flake-config github:juspay/omnix -- ci
